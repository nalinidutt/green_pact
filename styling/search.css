/*.search {
    margin: 20px;
    display: flex;
  }
  
  input[type="text"] {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    flex: 1;
  }
  
  button[type="submit"] {
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  button[type="submit"]:hover {
    background-color: #0056b3;
  }*/

  #search-container {
    position: relative;
  }

  #search-bar {
    display: flex;
    margin: 0.5em 0;
    margin-right: 1em;
  }
  #search-bar > div {
    position: relative;
  }
  #search-bar .material-icons {
    position: absolute;
    right: 1.25em;
    top: 50%;
    font: 1em;
    opacity: 0;
    display: none;
    transform: translate(0%, -50%);
    transition: 0.25s ease;
  }
  #search-bar .material-icons:hover {
    color: #c162f0;
    opacity: 0.7;
    cursor: pointer;
  }
  #search-bar > div {
    margin-right: 1em;
  }
  #search {
    padding-top: 0.45em;
    padding-bottom: 0.45em;
    width: 20em;
  }
  #search-go {
    margin: 0;
  }

  .styled-button {
    display: inline-block;
    position: relative;
    margin: 1em 0;
    padding: 0.55em 2em;
    border-radius: 9em;
    min-width: 4em;
    text-align: center;
    color: white;
    background-color: #c162f0;
    background: linear-gradient(135deg, #c162f0, #6347ff);
    text-decoration: none;
    border: none;
    box-shadow: 0 0.25em 1em rgba(99, 71, 255, 0.3);
    text-transform: uppercase;
    letter-spacing: 1.5px;
    font-size: 0.9em;
  }
  .styled-button::before, .styled-button.gray-out::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: linear-gradient(135deg, rgba(99, 71, 255, 0.7), rgba(193, 98, 240, 0.7));
    opacity: 0;
    transition: inherit;
    z-index: 0;
  }
  .styled-button:hover::before {
    opacity: 1;
  }
  .styled-button:hover, .styled-button.outline:hover {
    box-shadow: 0 0.5em 1em rgba(99, 71, 255, 0.4);
    cursor: pointer;
  }
  .styled-button span { /*making sure text shows up over overlay*/
    position: relative;
    z-index: 1;
  }

  /*secondary button styling*/
  .styled-button.outline {
    background: transparent;
    color: #c162f0;
    border: 2px solid #c162f0;
    box-shadow: 0 0.25em 1em rgba(99, 71, 255, 0);
  }
  .styled-button.outline:hover {
    background: #6347ff;
    border-color: transparent;
    color: white;
  }
  .styled-button.outline::before, nav .account-link::before, .styled-button.outline.gray-out::after {
    background: linear-gradient(135deg, #a05cf8, #c162f0);
    border-radius: inherit;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    top: -2px;
    left: -2px;
  }
  /*disabled styling*/
  .styled-button.gray-out {
    pointer-events: none;
    color: rgba(255, 255, 255, 0.65);
    box-shadow: none;
  }
  .styled-button.gray-out::before, .styled-button.gray-out::after {
    opacity: 1;
  }
  .styled-button.gray-out::after, .styled-button.outline.gray-out::after {
    background: rgba(150, 150, 150, 0.4);
  }
  /*loading styling*/
  .styled-button.loading {
    pointer-events: none;
  }

  .styled-button span::after { /*loading sign*/
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 1.25em;
    height: 1.25em;
    border-radius: 50%;
    border: 2px solid white;
    border-right-color: transparent;
    transform-origin: center;
    transform: translate(-50%, -50%) rotate(0);
    opacity: 0;
    transition: 0.2s ease;
    z-index: 2;
  }
  .styled-button.loading span::after {
    opacity: 1;
    animation: buttonLoad 1s linear infinite;
  }
  .styled-button.loading span {
    color: rgba(255, 255, 255, 0.2);
  }

  input.rounded { /*rounded input styling*/
    border: none;
    padding: 0.75em 1.75em;
    border-radius: 9em;
    min-width: 12em;
    color: #7c6887;
    background: white;
    box-shadow: 0 0.25em 0.5em rgba(83, 2, 122, 0.15);
    font-size: 1em;
    transition: 0.2s ease;
  }
  input.rounded:hover:not(:focus), input.rounded:focus {
    box-shadow: 0 0.5em 1em rgba(83, 2, 122, 0.15);
    transition: 0.2s ease;
  }
  
